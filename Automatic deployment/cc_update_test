kubectl hlf chaincode invoke --config=certificates/jorg1msp-cp.yaml --user=jorg1msp-admin-hlf-operator-experiment-2 --peer=jorg1-peer0.hlf-operator-experiment-2 --chaincode=token2 --channel=jdemo --fcn=init -a '[]'




kubectl hlf externalchaincode update --image=janzumbier/tokencontract:latest \
    --name=token \
    --namespace=default \
    --package-id=token:e34e29a88ca05a06a4a93fc11eec04de60160c67cecad00628a51f7821a16654 \
    --tls-required=false \
    --replicas=1



kubectl hlf externalchaincode sync --image=janzumbier/tokencontract:latest --name={{chaincode_name}} --namespace=default --package-id={{package_id.stdout}} --tls-required=false --replicas=1 --env=CORE_CHAINCODE_ID_NAME={{package_id.stdout}}

kubectl hlf chaincode approveformyorg --config=certificates/org2msp-cp.yaml --user=org2msp-admin-default --peer=org2-peer0.default \
    --package-id=token:e34e29a88ca05a06a4a93fc11eec04de60160c67cecad00628a51f7821a16654 \
    --version 1.1 --sequence 2 --name=token \
    --policy="OR('Org1MSP.member')" --channel=demo


kubectl hlf chaincode commit --config=certificates/org1msp-cp.yaml --user=org1msp-admin-default --mspid=Org1MSP \
    --version 1.1 --sequence 2 --name=token \
    --policy="OR('Org1MSP.member')" --channel=demo

kubectl hlf chaincode queryinstalled --config=certificates/jorg1msp-cp.yaml --user=jorg1msp-admin-hlf-operator-experiment-2 --peer=jorg1-peer0.hlf-operator-experiment-2

      - name: Getting package id 
        shell: kubectl get fabricchaincodes.hlf.kungfusoftware.es/token -o yaml | yq eval '.spec.packageId'
        register: pid

      - name: Convert package id
        set_fact:
            pid_out: "{{ pid.stdout }}"

      - name: Generating connection.json from template
        ansible.builtin.template:
          src: "chaincode/connection.json.j2"
          dest: "chaincode/connection.json"

      - name: Generating metadata.json from template
        ansible.builtin.template:
          src: "chaincode/metadata.json.j2"
          dest: "chaincode/metadata.json"

      - name: taring
        shell: cd chaincode && tar cfz code.tar.gz connection.json

      - name: taring
        shell: cd chaincode && tar cfz chaincode.tgz metadata.json code.tar.gz


      - name: Creating a network configuration for each organisation
        command: kubectl hlf networkconfig create --name={{item.1.mspid | lower}}-cp -o {{item.1.mspid}} -o OrdererMSP -c {{ item.0.name }} --identities={{item.1.mspid | lower}}-admin.default --secret={{item.1.mspid | lower}}-cp
        loop: "{{ channel | subelements('peerparticipants') }}"
        ignore_errors: true

      - name: Installing chaincode on all peers
        command: kubectl hlf chaincode install --path=chaincode/chaincode.tgz --config=certificates/{{item.0.mspid | lower}}-cp.yaml --language=java --label={{chaincode_name}} --user={{item.0.mspid | lower}}-admin-default --peer={{item.1.name}}.default
        loop: "{{ peer_organisations | subelements('peers') }}"

      - name: Fetching connection profile of each organisation
        shell: kubectl get secret {{item.1.mspid| lower}}-cp -o jsonpath="{.data.config\.yaml}" | base64 --decode > certificates/{{item.1.mspid | lower}}-cp.yaml
        loop: "{{ channel | subelements('peerparticipants') }}"

      - name: Approve the chaincode for all organisations
        command: kubectl hlf chaincode approveformyorg --config=certificates/{{item.1.mspid | lower}}-cp.yaml --user={{item.1.mspid | lower}}-admin-default --peer={{item.1.peer}}.default --package-id={{pid_out}} --version "{{item.0.chaincodes[0].version}}" --sequence "{{item.0.chaincodes[0].sequence}}" --name={{item.0.chaincodes[0].name}} --policy="{{item.0.chaincodes[0].policy}}" --channel={{item.0.name}}
        loop: "{{ channel | subelements('peerparticipants') }}"

      - name: pause for 30 seconds
        pause:
          seconds: 30

      - name: Committing chaincode for all organisations
        command: kubectl hlf chaincode commit --config=certificates/{{channel[0].peerparticipants[0].mspid | lower}}-cp.yaml --user={{channel[0].peerparticipants[0].mspid | lower}}-admin-default --mspid={{channel[0].peerparticipants[0].mspid}}  --version "{{channel[0].chaincodes[0].version}}" --sequence "{{channel[0].chaincodes[0].sequence}}" --name={{channel[0].chaincodes[0].name}} --policy="{{channel[0].chaincodes[0].policy}}" --channel={{channel[0].name}}